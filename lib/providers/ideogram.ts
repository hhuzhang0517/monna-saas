import { uploadToStorage, downloadFromUrl } from '../storage'

const IDEOGRAM_API_URL = 'https://api.ideogram.ai/v1/generate'

interface IdeogramResponse {
  data: Array<{
    url: string
    is_image_safe: boolean
  }>
}

export async function generateWithIdeogram(prompt: string): Promise<string> {
  try {
    const response = await fetch(IDEOGRAM_API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Api-Key': process.env.IDEOGRAM_API_KEY!,
      },
      body: JSON.stringify({
        prompt,
        aspect_ratio: '1:1',
        model: 'V_2',
        magic_prompt_option: 'AUTO',
      }),
    })

    if (!response.ok) {
      const error = await response.text()
      throw new Error(`Ideogram API error: ${error}`)
    }

    const data: IdeogramResponse = await response.json()
    
    if (!data.data || data.data.length === 0) {
      throw new Error('No image generated by Ideogram')
    }

    const imageUrl = data.data[0].url
    
    // 下载临时URL的图片
    const buffer = await downloadFromUrl(imageUrl)
    
    // 上传到Supabase Storage
    const url = await uploadToStorage(buffer, 'ideogram-image.png', 'image/png')
    
    return url
  } catch (error: any) {
    console.error('Ideogram generation error:', error)
    throw new Error(`Ideogram generation failed: ${error?.message || 'Unknown error'}`)
  }
}
